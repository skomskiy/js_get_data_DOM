{"version":3,"sources":["scripts/main.js"],"names":["content","document","querySelectorAll","total","avarage","populationArray","child","re","push","textContent","replace","reduce","a","b","length","numberFormat","Intl","NumberFormat","formattedTotal","format","formattedAvarage","totalFinal","querySelector","averageFinal","remove","insertAdjacentHTML"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCA,IAkCA,EAlCMA,EAAUC,SAASC,iBAAiB,eACtCC,EAAQ,EACRC,EAAU,EACRC,EAAkB,GAEJL,EAAAA,EAAAA,GA6BpB,IA7B6B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBM,IAAAA,EAAkB,EAAA,MACrBC,EAAK,MAEXF,EAAgBG,MAAMF,EAAMG,YAAYC,QAAQH,EAAI,MA0BtD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAnBAH,GAJAD,EAAQE,EAAgBM,OAAO,SAACC,EAAGC,GAC1BD,OAAAA,EAAIC,KAGKb,EAAQc,OAE1B,IAAMC,EAAeC,KAAKC,aAAa,SACjCC,EAAiBH,EAAaI,OAAOhB,GACrCiB,EAAmBL,EAAaI,OAAOf,GAEvCiB,EAAapB,SAASqB,cAAc,UACpCC,EAAetB,SAASqB,cAAc,YAE5CrB,SAASqB,cAAc,qBAAqBE,SAE5CH,EAAWI,mBAAmB,YAExBP,4CAAAA,OAAAA,EAFN,kBAMAjB,SAASqB,cAAc,uBAAuBE,SAE9CD,EAAaE,mBAAmB,YAE1BL,8CAAAA,OAAAA,EAFN","file":"main.0f258d25.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst content = document.querySelectorAll('.population');\nlet total = 0;\nlet avarage = 0;\nconst populationArray = [];\n\nfor (const child of content) {\n  const re = /,/gi;\n\n  populationArray.push(+child.textContent.replace(re, ''));\n};\n\ntotal = populationArray.reduce((a, b) => {\n  return a + b;\n});\n\navarage = total / content.length;\n\nconst numberFormat = Intl.NumberFormat('en-US');\nconst formattedTotal = numberFormat.format(total);\nconst formattedAvarage = numberFormat.format(avarage);\n\nconst totalFinal = document.querySelector('.total');\nconst averageFinal = document.querySelector('.average');\n\ndocument.querySelector('.total-population').remove();\n\ntotalFinal.insertAdjacentHTML('beforeend', `\n  <span class=\"total-population\">\n    ${formattedTotal}\n  </span>\n`);\n\ndocument.querySelector('.average-population').remove();\n\naverageFinal.insertAdjacentHTML('beforeend', `\n  <span class=\"average-population\">\n    ${formattedAvarage}\n  </span>\n`);\n"]}